apply from: "${rootProject.rootDir}/config.gradle"
apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

android {

    project.ext.setDefaultConfig project

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

}

dependencies {

    def androidx_version = "1.0.2"
    def constraintlayout_version = '1.1.3'
    def lifecycle_version = '2.2.0'
    def multidex_version = '2.0.1'
    def butterknife_version = "10.2.1"
    def gson_version = "2.8.6"
    def retrofit_version = '2.7.2'
    def rxjava_version = '2.2.19'
    def rxandroid_version = '2.1.1'
    def leakcanary_version = '2.2'
    def eventbus_version = '3.2.0'
    def easypermissions_version = '3.0.0'
    def glide_version = '4.11.0'
    def mpandroidchart_version = 'v3.1.0'
    def compressor_version = '3.0.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "androidx.appcompat:appcompat:$androidx_version"
    api "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    api 'com.google.android.material:material:1.2.0-alpha05'

    api "androidx.multidex:multidex:$multidex_version"

    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Saved state module for ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //控件注入
    api "com.jakewharton:butterknife:$butterknife_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"

    //gson数据解析
    api "com.google.code.gson:gson:$gson_version"

    //网络
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    api "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    api "io.reactivex.rxjava2:rxjava:$rxjava_version"
    api 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    //内存泄漏监控
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    //eventbus
    api "org.greenrobot:eventbus:$eventbus_version"

    //权限申请框架
    api "pub.devrel:easypermissions:$easypermissions_version"

    //glide图片加载框架
    api "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:$glide_version"
    //glide换转
    api 'jp.wasabeef:glide-transformations:4.1.0'
    // If you want to use the GPU Filters
    api 'jp.co.cyberagent.android:gpuimage:2.0.0'

    //圆形图片
    api 'de.hdodenhof:circleimageview:3.0.1'

    //图标框架库
    api "com.github.PhilJay:MPAndroidChart:$mpandroidchart_version"

    //刷新库
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    //1.0.5及以前版本的老用户升级需谨慎，API改动过大
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'
    //没有使用特殊Header，可以不加这行

    //轮播
    api 'me.relex:circleindicator:2.1.4'

    //图片压缩
    api "id.zelory:compressor:$compressor_version"

}
